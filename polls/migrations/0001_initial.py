# Generated by Django 5.2.5 on 2025-08-12 10:13

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nazwa')),
                ('description', models.TextField(verbose_name='Opis')),
                ('candidate_type', models.CharField(choices=[('individual', 'Osoba fizyczna'), ('party', 'Partia polityczna')], max_length=20, verbose_name='Typ kandydata')),
                ('main_photo', models.ImageField(upload_to='candidates/', verbose_name='Główne zdjęcie')),
                ('additional_photos', models.JSONField(blank=True, default=list, verbose_name='Dodatkowe zdjęcia')),
                ('articles', models.JSONField(blank=True, default=list, verbose_name='Artykuły')),
                ('extended_description', models.TextField(blank=True, verbose_name='Rozszerzony opis')),
                ('background_info', models.TextField(blank=True, verbose_name='Informacje tła')),
                ('is_premium', models.BooleanField(default=False, verbose_name='Profil premium')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Kandydat',
                'verbose_name_plural': 'Kandydaci',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Nazwa wydarzenia')),
                ('description', models.TextField(verbose_name='Opis')),
                ('event_type', models.CharField(choices=[('presidential', 'Wybory Prezydenckie'), ('parliamentary', 'Wybory Parlamentarne'), ('european', 'Wybory do Parlamentu Europejskiego'), ('local', 'Wybory Samorządowe'), ('other', 'Inne')], max_length=20, verbose_name='Typ wydarzenia')),
                ('event_date', models.DateTimeField(verbose_name='Data wydarzenia')),
                ('status', models.CharField(choices=[('active', 'Aktywny'), ('upcoming', 'Nadchodzący'), ('finished', 'Zakończony'), ('private', 'Prywatny')], default='upcoming', max_length=20, verbose_name='Status')),
                ('is_private', models.BooleanField(default=False, verbose_name='Sondaż prywatny')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Wydarzenie',
                'verbose_name_plural': 'Wydarzenia',
                'ordering': ['event_date'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('author_name', models.CharField(max_length=100, verbose_name='Nazwa autora')),
                ('author_email', models.EmailField(max_length=254, verbose_name='Email autora')),
                ('content', models.TextField(verbose_name='Treść komentarza')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Zatwierdzony')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Adres IP')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='polls.candidate', verbose_name='Kandydat')),
            ],
            options={
                'verbose_name': 'Komentarz',
                'verbose_name_plural': 'Komentarze',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='candidate',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='polls.event', verbose_name='Wydarzenie'),
        ),
        migrations.CreateModel(
            name='PollAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_votes', models.IntegerField(default=0, verbose_name='Łączna liczba głosów')),
                ('unique_voters', models.IntegerField(default=0, verbose_name='Unikalni głosujący')),
                ('geographic_data', models.JSONField(default=dict, verbose_name='Dane geograficzne')),
                ('demographic_data', models.JSONField(default=dict, verbose_name='Dane demograficzne')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='polls.event', verbose_name='Wydarzenie')),
            ],
            options={
                'verbose_name': 'Analityka sondażu',
                'verbose_name_plural': 'Analityka sondaży',
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('badge_type', models.CharField(choices=[('voter', 'Głosujący'), ('regular', 'Regularny głosujący'), ('super_voter', 'Super głosujący'), ('commenter', 'Komentujący')], max_length=20, verbose_name='Typ odznaki')),
                ('description', models.TextField(verbose_name='Opis odznaki')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Odznaka użytkownika',
                'verbose_name_plural': 'Odznaki użytkowników',
                'unique_together': {('user', 'badge_type')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField(verbose_name='Adres IP')),
                ('browser_fingerprint', models.CharField(blank=True, max_length=255, verbose_name='Fingerprint przeglądarki')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('location_data', models.JSONField(blank=True, default=dict, verbose_name='Dane lokalizacji')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='polls.candidate', verbose_name='Kandydat')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='polls.event', verbose_name='Wydarzenie')),
            ],
            options={
                'verbose_name': 'Głos',
                'verbose_name_plural': 'Głosy',
                'unique_together': {('event', 'ip_address')},
            },
        ),
    ]
